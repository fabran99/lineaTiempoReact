{"version":3,"sources":["components/Elemento.js","components/FormAdd.js","components/LineaTiempo.js","App.js","serviceWorker.js","index.js"],"names":["Elemento","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDel","bind","assertThisInitialized","toggle","front","state","index","ondel","id","document","getElementById","style","display","indexplus","parseInt","concat","zIndex","setState","styleElemento","left","idElemento","react_default","a","createElement","className","onClick","class","nombre","src","imagen","title","alt","fecha","Component","FormAdd","agregarElemento","updateState","e","preventDefault","error","window","alert","onAdd","_e$target","target","value","name","defineProperty","onSubmit","type","placeholder","onChange","for","LineaTiempo","elementos","delElemento","addElemento","confirm","filter","i","elemento","toConsumableArray","_this2","fechaInicial","inicio","fechaFinal","final","diferencia","map","length","components_Elemento","components_FormAdd","App","inicial","inicialChange","finalChange","inicialval","finalval","components_LineaTiempo","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.927e5668.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Elemento extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleDel=this.handleDel.bind(this);\r\n        this.toggle=this.toggle.bind(this);\r\n        this.front=this.front.bind(this);\r\n        this.state={\r\n            index:5\r\n        };\r\n    }\r\n    handleDel(){\r\n        this.props.ondel(this.props.id);\r\n    }\r\n    toggle(){\r\n        if(document.getElementById(this.props.id).style.display==\"none\"){\r\n            document.getElementById(this.props.id).style.display=\"block\";\r\n        }\r\n        else{\r\n            document.getElementById(this.props.id).style.display=\"none\";\r\n        }\r\n    }\r\n    front(){\r\n        var index=parseInt(this.state.index);\r\n        var indexplus=index+1;\r\n        document.getElementById(`elemento${this.props.id}`).style.zIndex=indexplus\r\n        this.setState({\r\n            index: indexplus\r\n        });\r\n    }\r\n    render(){\r\n        var location=this.props.left + \"%\";\r\n        const styleElemento={\r\n            left: location,\r\n        };\r\n        const styleContenido={\r\n            display: \"none\"\r\n        };\r\n        var idElemento=`elemento${this.props.id}`;\r\n        return(\r\n            <div className=\"elemento\" style={styleElemento} id={idElemento}>\r\n                <div className=\"contenido\" id={this.props.id} style={styleContenido} onClick={this.front}>\r\n                    <i class=\"fas fa-window-close\" onClick={this.toggle}></i>\r\n                    <h6>{this.props.nombre}</h6>\r\n                    <div className=\"img\">\r\n                        <img src={this.props.imagen} title={this.props.nombre} alt={this.props.nombre}/>\r\n                    </div>\r\n                    <span className=\"fechaElemento\">{this.props.fecha}</span>\r\n                    <button onClick={this.handleDel}>Eliminar</button>\r\n                </div>\r\n                <div>\r\n                    <span className=\"year\" onClick={this.toggle}>{this.props.fecha}</span>\r\n                </div>\r\n                <i class=\"fas fa-circle\" title={this.props.fecha} onClick={this.toggle}></i>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Elemento;","import React, { Component } from 'react';\r\n\r\nclass FormAdd extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            nombre:\"\",\r\n            imagen:\"\",\r\n            fecha: null\r\n        };\r\n        this.agregarElemento=this.agregarElemento.bind(this);\r\n        this.updateState=this.updateState.bind(this);\r\n    }\r\n\r\n    agregarElemento(e){\r\n        e.preventDefault();\r\n        var error=false;\r\n        if(this.state.nombre==\"\" || this.state.imagen==\"\" || this.state.fecha==null){\r\n            error=true;\r\n            window.alert(\"debes rellenar los campos\")\r\n        }\r\n        if(!error){\r\n            this.props.onAdd(this.state);\r\n        }\r\n    }\r\n    updateState(e){\r\n        const {value, name} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"formAdd\">\r\n                <h1>Agrega elementos a la linea</h1>\r\n                <form onSubmit={this.agregarElemento}>\r\n                    <label>Nombre del elemento</label>\r\n                    <input name=\"nombre\" type=\"text\" placeholder=\"Nombre del elemento\" onChange={this.updateState}/>\r\n                    <label>Imagen</label>\r\n                    <input name=\"imagen\" type=\"text\" placeholder=\"Imagen del elemento\" onChange={this.updateState}/>\r\n                    <label for=\"addFecha\">Fecha</label>\r\n                    <input name=\"fecha\" type=\"number\" id=\"addFecha\" onChange={this.updateState}/>\r\n                    <button>Guardar</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormAdd;","import React, { Component } from 'react';\r\nimport {elementos} from '../elementos.json';\r\nimport Elemento from './Elemento';\r\nimport FormAdd from './FormAdd';\r\n\r\nclass LineaTiempo extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            elementos\r\n        };\r\n        this.delElemento=this.delElemento.bind(this);\r\n        this.addElemento=this.addElemento.bind(this);\r\n    }\r\n\r\n    delElemento(index){\r\n        if(window.confirm(\"Seguro que quieres eliminar este elemento?\")){\r\n            this.setState({\r\n                elementos: this.state.elementos.filter((e,i) => {\r\n                    return i!==index\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    addElemento(elemento){\r\n        this.setState({\r\n            elementos: [...this.state.elementos, elemento]\r\n        })\r\n    }\r\n\r\n    render(){\r\n        var fechaInicial=this.props.inicio;\r\n        var fechaFinal=this.props.final;\r\n        var diferencia=fechaFinal-fechaInicial;\r\n\r\n        const elementos=this.state.elementos.map((elemento, i) =>{\r\n            if(this.state.elementos.length>0 && fechaInicial<=parseInt(elemento.fecha) && fechaFinal>=parseInt(elemento.fecha)){\r\n                return(\r\n                    <Elemento left={((elemento.fecha-fechaInicial)*100)/diferencia} ondel={this.delElemento} id={i} nombre={elemento.nombre} imagen={elemento.imagen} fecha={elemento.fecha}/>\r\n                )\r\n            }\r\n        })\r\n        return(\r\n            <div className=\"espacioTrabajo\">\r\n                <FormAdd onAdd={this.addElemento}/>\r\n                <span>{fechaInicial}</span>\r\n                <div className=\"lineaTiempo\">\r\n                    {elementos}\r\n                </div>\r\n                <span>{fechaFinal}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LineaTiempo;","import React, { Component } from 'react';\nimport './App.css';\nimport LineaTiempo from './components/LineaTiempo';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      inicial:null,\n      final:null\n    };\n    this.inicialChange=this.inicialChange.bind(this);\n    this.finalChange=this.finalChange.bind(this);\n  }\n\n  inicialChange(e){\n    var inicialval=e.target.value;\n    this.setState({\n      inicial: inicialval\n    });\n  }\n  finalChange(e){\n    var finalval=e.target.value;\n    this.setState({\n      final: finalval\n    });\n  }\n\n  \n  render() {\n    return (\n      <div className=\"contenedorTiempo\">\n        <div className=\"fechasLinea\">\n          <div>\n            <label for=\"inicial\">Año inicial</label>\n            <input type=\"number\" id=\"inicial\" onChange={this.inicialChange}/>\n          </div>\n          <div>\n            <label for=\"inicial\">Año final</label>\n            <input type=\"number\" id=\"final\" onChange={this.finalChange}/>\n          </div>\n        </div>\n        <LineaTiempo inicio={this.state.inicial} final={this.state.final}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}