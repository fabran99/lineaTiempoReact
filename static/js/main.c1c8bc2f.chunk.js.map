{"version":3,"sources":["components/Elemento.js","components/FormAdd.js","components/LineaTiempo.js","App.js","serviceWorker.js","index.js"],"names":["Elemento","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDel","bind","assertThisInitialized","toggle","ondel","id","document","getElementById","style","display","styleElemento","left","react_default","a","createElement","className","onClick","front","class","nombre","src","imagen","title","alt","fecha","Component","FormAdd","state","agregarElemento","updateState","e","preventDefault","error","window","alert","onAdd","_e$target","target","value","name","setState","defineProperty","onSubmit","type","placeholder","onChange","for","LineaTiempo","elementos","delElemento","addElemento","index","confirm","filter","i","elemento","concat","toConsumableArray","_this2","fechaInicial","inicio","fechaFinal","final","diferencia","map","length","parseInt","components_Elemento","components_FormAdd","App","inicial","inicialChange","finalChange","inicialval","finalval","components_LineaTiempo","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1c8bc2f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Elemento extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleDel=this.handleDel.bind(this);\r\n        this.toggle=this.toggle.bind(this);\r\n    }\r\n    handleDel(){\r\n        this.props.ondel(this.props.id);\r\n    }\r\n    toggle(){\r\n        if(document.getElementById(this.props.id).style.display==\"none\"){\r\n            document.getElementById(this.props.id).style.display=\"block\";\r\n        }\r\n        else{\r\n            document.getElementById(this.props.id).style.display=\"none\";\r\n        }\r\n    }\r\n    render(){\r\n        var location=this.props.left + \"%\";\r\n        const styleElemento={\r\n            left: location,\r\n        };\r\n        const styleContenido={\r\n            display: \"none\"\r\n        };\r\n        return(\r\n            <div className=\"elemento\" style={styleElemento}>\r\n                <div className=\"contenido\" id={this.props.id} style={styleContenido} onClick={this.front}>\r\n                    <i class=\"fas fa-window-close\" onClick={this.toggle}></i>\r\n                    <h6>{this.props.nombre}</h6>\r\n                    <div className=\"img\">\r\n                        <img src={this.props.imagen} title={this.props.nombre} alt={this.props.nombre}/>\r\n                    </div>\r\n                    <span className=\"fechaElemento\">{this.props.fecha}</span>\r\n                    <button onClick={this.handleDel}>Eliminar</button>\r\n                </div>\r\n                <span className=\"year\" onClick={this.toggle}>{this.props.fecha}</span>\r\n                <i class=\"fas fa-circle\" title={this.props.fecha} onClick={this.toggle}></i>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Elemento;","import React, { Component } from 'react';\r\n\r\nclass FormAdd extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            nombre:\"\",\r\n            imagen:\"\",\r\n            fecha: null\r\n        };\r\n        this.agregarElemento=this.agregarElemento.bind(this);\r\n        this.updateState=this.updateState.bind(this);\r\n    }\r\n\r\n    agregarElemento(e){\r\n        e.preventDefault();\r\n        var error=false;\r\n        if(this.state.nombre==\"\" || this.state.imagen==\"\" || this.state.fecha==null){\r\n            error=true;\r\n            window.alert(\"debes rellenar los campos\")\r\n        }\r\n        if(!error){\r\n            this.props.onAdd(this.state);\r\n        }\r\n    }\r\n    updateState(e){\r\n        const {value, name} = e.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"formAdd\">\r\n                <h1>Agrega elementos a la linea</h1>\r\n                <form onSubmit={this.agregarElemento}>\r\n                    <label>Nombre del elemento</label>\r\n                    <input name=\"nombre\" type=\"text\" placeholder=\"Nombre del elemento\" onChange={this.updateState}/>\r\n                    <label>Imagen</label>\r\n                    <input name=\"imagen\" type=\"text\" placeholder=\"Imagen del elemento\" onChange={this.updateState}/>\r\n                    <label for=\"addFecha\">Fecha</label>\r\n                    <input name=\"fecha\" type=\"number\" id=\"addFecha\" onChange={this.updateState}/>\r\n                    <button>Guardar</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormAdd;","import React, { Component } from 'react';\r\nimport {elementos} from '../elementos.json';\r\nimport Elemento from './Elemento';\r\nimport FormAdd from './FormAdd';\r\n\r\nclass LineaTiempo extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            elementos\r\n        };\r\n        this.delElemento=this.delElemento.bind(this);\r\n        this.addElemento=this.addElemento.bind(this);\r\n    }\r\n\r\n    delElemento(index){\r\n        if(window.confirm(\"Seguro que quieres eliminar este elemento?\")){\r\n            this.setState({\r\n                elementos: this.state.elementos.filter((e,i) => {\r\n                    return i!==index\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    addElemento(elemento){\r\n        this.setState({\r\n            elementos: [...this.state.elementos, elemento]\r\n        })\r\n    }\r\n\r\n    render(){\r\n        var fechaInicial=this.props.inicio;\r\n        var fechaFinal=this.props.final;\r\n        var diferencia=fechaFinal-fechaInicial;\r\n\r\n        const elementos=this.state.elementos.map((elemento, i) =>{\r\n            if(this.state.elementos.length>0 && fechaInicial<=parseInt(elemento.fecha) && fechaFinal>=parseInt(elemento.fecha)){\r\n                return(\r\n                    <Elemento left={((elemento.fecha-fechaInicial)*100)/diferencia} ondel={this.delElemento} id={i} nombre={elemento.nombre} imagen={elemento.imagen} fecha={elemento.fecha}/>\r\n                )\r\n            }\r\n        })\r\n        return(\r\n            <div className=\"espacioTrabajo\">\r\n                <FormAdd onAdd={this.addElemento}/>\r\n                <span>{fechaInicial}</span>\r\n                <div className=\"lineaTiempo\">\r\n                    {elementos}\r\n                </div>\r\n                <span>{fechaFinal}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default LineaTiempo;","import React, { Component } from 'react';\nimport './App.css';\nimport LineaTiempo from './components/LineaTiempo';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      inicial:null,\n      final:null\n    };\n    this.inicialChange=this.inicialChange.bind(this);\n    this.finalChange=this.finalChange.bind(this);\n  }\n\n  inicialChange(e){\n    var inicialval=e.target.value;\n    this.setState({\n      inicial: inicialval\n    });\n  }\n  finalChange(e){\n    var finalval=e.target.value;\n    this.setState({\n      final: finalval\n    });\n  }\n\n  \n  render() {\n    return (\n      <div className=\"contenedorTiempo\">\n        <div className=\"fechasLinea\">\n          <div>\n            <label for=\"inicial\">Año inicial</label>\n            <input type=\"number\" id=\"inicial\" onChange={this.inicialChange}/>\n          </div>\n          <div>\n            <label for=\"inicial\">Año final</label>\n            <input type=\"number\" id=\"final\" onChange={this.finalChange}/>\n          </div>\n        </div>\n        <LineaTiempo inicio={this.state.inicial} final={this.state.final}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}